{"version":3,"file":"loop.js","sourceRoot":"/","sources":["server/loop.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAyC;AACzC,2CAAwC;AAExC,IAAI,cAA8C,CAAC;AACnD,IAAI,SAAS,GAAG,IAAI,KAAK,EAAS,CAAC;AAEnC,SAAgB,KAAK;IACjB,cAAc,GAAG,WAAW,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;IAEjD,sBAAsB;IACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACxD,SAAS,CAAC,IAAI,CAAC,IAAI,aAAK,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9G,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACnE,SAAS,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;KACtE;AACL,CAAC;AATD,sBASC;AAED,SAAgB,IAAI;IAChB,IAAI,cAAc;QAAE,aAAa,CAAC,cAAc,CAAC,CAAC;AACtD,CAAC;AAFD,oBAEC;AAED,SAAS,cAAc;IACnB,SAAS,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,EAAE;QAC1C,GAAG,CAAC,YAAY,EAAE,CAAC;QACnB,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE;YACd,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;SACnD;IACL,CAAC,CAAC,CAAC;IAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;KAC1B;AACL,CAAC","sourcesContent":["import * as GameState from \"@game/state\";\nimport { Spawn } from \"@game/mob/spawn\";\n\nvar intervalHandle: ReturnType<typeof setInterval>;\nvar spawnList = new Array<Spawn>();\n\nexport function Start() {\n    intervalHandle = setInterval(ServerInterval, 50);\n\n    // Load Mobs from Data\n    for (var i = 0; i < GameState.config.MobSpawns.length; i++) {\n        spawnList.push(new Spawn(GameState.config.MobSpawns[i].Position.x, GameState.config.MobSpawns[i].Position.y));\n        spawnList[i].MaintainMobCount(GameState.config.MobSpawns[i].Count);\n        spawnList[i].DefineMobsInSpawn(GameState.config.MobSpawns[i].Mobs);\n    }\n}\n\nexport function Stop() {\n    if (intervalHandle) clearInterval(intervalHandle);\n}\n\nfunction ServerInterval() {\n    GameState.characterList.ForEachPlayer((plr) => {\n        plr.AttackTarget();\n        if (plr.IsDead()) {\n            GameState.characterList.RemoveByID(plr.GetID());\n        }\n    });\n\n    for (var i = 0; i < spawnList.length; i++) {\n        spawnList[i].Process();\n    }\n}\n"]}