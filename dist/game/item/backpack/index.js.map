{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/item/backpack/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { serverEvent } from '@events';\nimport { Item } from '@models/item';\nimport { characterList } from '@game/state';\nimport * as ItemTemplate from '@game/item_template';\nimport { GetItemByUUID, GetItemByID } from '@game/item/find';\n\nexport async function Open(data: { socket: SocketIO.Socket, BackpackUUID: string }) {\n  var plr = characterList.GetByID(data.socket.id);\n  if (!plr) return;\n\n  let item = await GetItemByUUID(data.BackpackUUID);\n  let backpackTemplate = ItemTemplate.GetByID(item.item_template_id);\n\n  const rows = await Item.findAll({\n    where: { inside_item: data.BackpackUUID }\n  });\n\n  let itemList = [];\n\n  rows.map(item => {\n    // @ts-ignore - Ignore the following TypeScript error\n    const itemTemplate = ItemTemplate.GetByID(item.item_template_id);\n\n    // @ts-ignore - Ignore the following TypeScript error\n    itemList.push({\n      type: 'ITEM',\n      item: {\n        // @ts-ignore - Ignore the following TypeScript error\n        uuid: item.uuid,\n        // @ts-ignore - Ignore the following TypeScript error\n        type: item.type,\n        // @ts-ignore - Ignore the following TypeScript error\n        name: item.name,\n        // @ts-ignore - Ignore the following TypeScript error\n        quantity: item.quantity,\n        // @ts-ignore - Ignore the following TypeScript error\n        image: item.image,\n        // @ts-ignore - Ignore the following TypeScript error\n        item_template_id: item.item_template_id,\n        item_template: itemTemplate.toJSON()\n      }\n    })\n  })\n\n  // @ts-ignore - Ignore the following TypeScript error\n  plr.socket.emit('Character:ShowBag', { uuid: data.BackpackUUID, slots: backpackTemplate.slots, Data: itemList });\n}\n\nexport async function Update(player, backpackId) {\n  let item = await GetItemByUUID(backpackId);\n  let backpackTemplate = ItemTemplate.GetByID(item.item_template_id);\n\n  const rows = await Item.findAll({\n    where: { inside_item: backpackId }\n  });\n\n  let itemList = [];\n\n  rows.map(item => {\n    // @ts-ignore - Ignore the following TypeScript error\n    const itemTemplate = ItemTemplate.GetByID(item.item_template_id);\n\n    itemList.push({\n      type: 'ITEM',\n      item: {\n        // @ts-ignore - Ignore the following TypeScript error\n        uuid: item.uuid,\n        // @ts-ignore - Ignore the following TypeScript error\n        type: item.type,\n        // @ts-ignore - Ignore the following TypeScript error\n        name: item.name,\n        // @ts-ignore - Ignore the following TypeScript error\n        quantity: item.quantity,\n        // @ts-ignore - Ignore the following TypeScript error\n        image: item.image,\n        // @ts-ignore - Ignore the following TypeScript error\n        item_template_id: item.item_template_id,\n        // @ts-ignore - Ignore the following TypeScript error\n        item_template: itemTemplate.toJSON()\n      }\n    })\n  })\n\n  player.socket.emit('Character:ShowBag', { uuid: backpackId, slots: backpackTemplate.slots, Data: itemList });\n}\n\nserverEvent.on('Backpack:Open', Open);\n"]}