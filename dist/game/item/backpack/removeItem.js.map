{"version":3,"file":"removeItem.js","sourceRoot":"/","sources":["game/item/backpack/removeItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAsC;AAE/B,MAAM,UAAU,GAAG,CAAO,QAAgB,EAAE,QAAgB,EAAE,EAAE;IACrE,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,IAAI;QACF,MAAM,IAAI,GAAQ,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;QAE1E,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAClC,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,EAAE,CAAC,CAAC;gBAC1D,OAAO,CAAC,GAAG,CAAC,0BAA0B,QAAQ,2BAA2B,QAAQ,GAAG,CAAC,CAAC;gBACtF,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,0BAA0B,QAAQ,qBAAqB,CAAC,CAAC;gBACrE,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,kBAAkB,QAAQ,aAAa,CAAC,CAAC;SACtD;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;KAC/D;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAA,CAAC;AAxBW,QAAA,UAAU,cAwBrB;AAEK,MAAM,aAAa,GAAG,CAAO,QAAgB,EAAE,QAAgB,EAAE,EAAE;IACxE,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,IAAI;QACF,MAAM,IAAI,GAAQ,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;QAE1E,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC7C,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;gBACzC,OAAO,CAAC,GAAG,CAAC,aAAa,QAAQ,qBAAqB,CAAC,CAAC;gBACxD,OAAO,IAAI,CAAC;aACb;SACF;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,kBAAkB,QAAQ,aAAa,CAAC,CAAC;SACtD;KACF;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;KAC/D;IAED,OAAO,KAAK,CAAC;AACf,CAAC,CAAA,CAAC;AApBW,QAAA,aAAa,iBAoBxB","sourcesContent":["import * as Model from '@models/item';\n\nexport const RemoveItem = async (itemUuid: string, quantity: number) => {\n  let result = false;\n\n  try {\n    const item: any = await Model.Item.findOne({ where: { uuid: itemUuid } });\n\n    if (item) {\n      if ((item.quantity - quantity) > 0) {\n        await item.update({ quantity: item.quantity - quantity });\n        console.log(`Updated item with UUID ${itemUuid}: quantity decreased by ${quantity}.`);\n        return true;\n      } else {\n        await item.destroy();\n        console.log(`Deleted item with UUID ${itemUuid} from the database.`);\n        return true;\n      }\n    } else {\n      console.log(`Item with UUID ${itemUuid} not found.`);\n    }\n  } catch (error) {\n    console.error('Error in removeItemQuantity function:', error);\n  }\n\n  return false;\n};\n\nexport const RemoveFromBag = async (itemUuid: string, quantity: number) => {\n  let result = false;\n\n  try {\n    const item: any = await Model.Item.findOne({ where: { uuid: itemUuid } });\n\n    if (item) {\n      if ((item.quantity - quantity) >= 0 || 1 == 1) {\n        await item.update({ inside_item: null });\n        console.log(`Item UUID ${itemUuid}: removed from bag.`);\n        return true;\n      }\n    } else {\n      console.log(`Item with UUID ${itemUuid} not found.`);\n    }\n  } catch (error) {\n    console.error('Error in removeItemQuantity function:', error);\n  }\n\n  return false;\n};\n"]}