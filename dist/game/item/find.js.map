{"version":3,"file":"find.js","sourceRoot":"/","sources":["game/item/find.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAsC;AACtC,yDAAqD;AAErD,SAAsB,aAAa,CAAC,IAAY;;QAC9C,IAAI,MAAM,GAAG,IAAI,CAAC;QAElB,IAAI,IAAI,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC;QAE9B,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;aAClD,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;CAAA;AAdD,sCAcC;AAED,SAAsB,WAAW,CAAC,EAAU;;QAC1C,IAAI,MAAM,GAAG,IAAI,CAAC;QAElB,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;aAC9C,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;CAAA;AAZD,kCAYC;AAED,SAAsB,sBAAsB,CAAC,IAAY;;QACvD,IAAI,MAAM,GAAG,IAAI,CAAC;QAElB,MAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YACvB,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;YACrB,OAAO,EAAE,CAAC;oBACR,KAAK,EAAE,4BAAY;oBACnB,EAAE,EAAE,cAAc;oBAClB,UAAU,EAAE,CAAC,OAAO,CAAC;iBACtB,CAAC;YACF,UAAU,EAAE,EAAE;SACf,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACb,qDAAqD;YACrD,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE;gBAC7B,qDAAqD;gBACrD,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;aAClC;iBAAM;gBACL,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;aAClE;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;CAAA;AAxBD,wDAwBC","sourcesContent":["import * as Model from '@models/item';\nimport { ItemTemplate } from '@models/item_template';\n\nexport async function GetItemByUUID(uuid: string) {\n  let result = null;\n\n  if (uuid == null) return null;\n\n  await Model.Item.findOne({ where: { uuid: uuid } })\n  .then((item: any) => {\n    result = item;\n  })\n  .catch(err => {\n    console.error('Erro ao encontrar item:', err);\n  });\n\n  return result;\n}\n\nexport async function GetItemByID(id: number) {\n  let result = null;\n\n  await Model.Item.findOne({ where: { id: id } })\n  .then((item: any) => {\n    result = item;\n  })\n  .catch(err => {\n    console.error('Erro ao encontrar item:', err);\n  });\n\n  return result;\n}\n\nexport async function GetItemImageByItemUUID(uuid: string) {\n  let result = null;\n\n  await Model.Item.findOne({\n    where: { uuid: uuid },\n    include: [{\n      model: ItemTemplate,\n      as: 'itemTemplate',\n      attributes: ['image']\n    }],\n    attributes: [],\n  }).then(item => {\n    // @ts-ignore - Ignore the following TypeScript error\n    if (item && item.itemTemplate) {\n      // @ts-ignore - Ignore the following TypeScript error\n      result = item.itemTemplate.image;\n    } else {\n      console.log('Item não encontrado ou ItemTemplate não associado');\n    }\n  }).catch(error => {\n    console.error('Ocorreu um erro ao buscar a imagem do:', error);\n  });\n\n  return result;\n}\n"]}