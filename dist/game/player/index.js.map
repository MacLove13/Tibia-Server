{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/player/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { Character } from '@game/character/interface';\nimport { DataSync } from '@game/character/dataSync';\nimport { serverSocket } from '@socket/socket';\nimport * as GameState from '@game/state';\nimport * as Geometry from '@utils/geometry';\n\nvar startSprites = [\"Hero\"];\nvar playerClass = [\"Warrior\"];\n\nexport var allPlayers = [];\n\n// import '@game/player/movimentation';\n// import '@game/player/attack';\n\nexport class Player implements Character {\n  socket: SocketIO.Socket;\n  syncData: DataSync;\n  targetChar: Character | null;\n  AttackDelay = 850;\n  LastAttackTime = 0;\n  intervalEnemies: NodeJS.Timer;\n  activeEnemiesList = false; \n  inSafeZone = false;\n  mainBackpackId = 0;\n  conversations = [];\n\n  constructor(socket: SocketIO.Socket) {\n    this.syncData = new DataSync(startSprites[(Math.random() * startSprites.length) | 0], playerClass[(Math.random() * playerClass.length) | 0]);\n    this.syncData.Position = { x: 60, y: 50 };\n    this.syncData.ID = socket.id;\n    this.socket = socket;\n    this.intervalEnemies = setInterval(() => this.UpdateEnemyList(), 200);\n  }\n\n  AddPlayerList(): void {\n    var existent = allPlayers.find(x => x.syncData.ID === this.syncData.ID)\n    if (existent != undefined) return;\n\n    allPlayers.push(this);\n\n    console.log('PlayerList Updated - Connect')\n    console.log(allPlayers.length)\n  }\n\n  RemovePlayerList(): void {\n    allPlayers = allPlayers.filter(x => x.syncData.ID !== this.syncData.ID)\n\n    console.log('PlayerList Updated - Disconnect')\n    console.log(allPlayers.length)\n  }\n\n  GetID(): string {\n    return this.syncData.ID;\n  }\n\n  IsDead(): boolean {\n    return this.syncData.HP <= 0;\n  }\n\n  InSafeZone(): boolean {\n    return this.inSafeZone;\n  }\n\n  GetJSON(): any {\n    return this.syncData.toJSON();\n  }\n\n  GetHP(): number {\n    return this.syncData.HP;\n  }\n\n  Revive() {\n    this.syncData.HP = this.syncData.MaxHP;\n    this.syncData.Position = { x: 60, y: 50 };\n\n    serverSocket.sockets.emit(\"SelfHeal\", { TargetID: this.syncData.ID, Health: this.syncData.HP });\n    this.socket.emit(\"CharacterTeleport\", { ID: this.syncData.ID, Data: { Rot: 0, Pos: this.syncData.Position } });\n  }\n\n  Heal(Points: number) {\n    var newLife = this.syncData.HP + Points;\n    if (newLife > this.syncData.MaxHP) newLife = this.syncData.MaxHP;\n\n    this.syncData.HP = newLife;\n\n    serverSocket.sockets.emit(\"SelfHeal\", { TargetID: this.syncData.ID, Health: this.syncData.HP });\n  }\n\n  async UseItem(data: { item_uuid: number, backpack_uuid: string }) {\n    /* try {\n      const item = await getItem(data.item_uuid);\n      if (item) {\n        if (item.type == 0) { // Food\n          // if (this.syncData.HP >= this.syncData.MaxHP) return;\n\n          this.Heal(item.item_template.HealHP);\n          this.ConsumeItem(data.item_uuid, data.backpack_uuid, item);\n        }\n        else if (item.type == 4) { // Sword\n          this.Equip(data.item_uuid, data.backpack_uuid, item);\n        }\n      } else {\n        console.log('No item found with that UUID.');\n      }\n    } catch (error) {\n      console.error('Error getting item:', error);\n    } */\n  }\n\n  AddExp(exp: number) {\n    this.syncData.CurrentExp += exp;\n    if (this.syncData.CurrentExp >= GameState.config.Player.LvlExp[this.syncData.Level]) {\n      this.syncData.Level++;\n      this.syncData.CurrentExp = 0;\n      serverSocket.sockets.emit(\"ApplyExperience\", { ID: this.socket.id, Exp: exp, NextLvl: this.syncData.Level });\n      this.syncData.MaxHP += 35;\n      this.syncData.HP = this.syncData.MaxHP;\n      this.syncData.Speed += 20;\n      this.Sync();\n    }\n    else {\n      serverSocket.sockets.emit(\"ApplyExperience\", { ID: this.socket.id, Exp: this.syncData.CurrentExp });\n    }\n\t}\n\n  UpdateExperience() {\n    serverSocket.sockets.emit(\"ApplyExperience\", { ID: this.socket.id, Exp: this.syncData.CurrentExp });\n  }\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Move(data: MoveData): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  CheckSafeZone(): void;\n\n  // @ts-ignore\n  MoveDir(rot: Rotation): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  CanMove(): boolean;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Target(char: Character): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Untarget(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  AttackTarget(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Hit(dmg: number): { Exp: number } | undefined;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Kill(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  CanAttack(): boolean;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Dispose(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  SelfAnnouce(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Save(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Disconnect(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  sendNotification(data: { Title: string; Content: string; }): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  textNotification(message: string): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Sync(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  RecalculeAttackPower(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  UpdateEquipments(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  UpdateEnemyList(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Equip(slot, item, itemTemplate, backpackUuid?): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Unequip(slot, itemUuid, backpackUuid): void;\n}\n\n// Prototypes\nimport '@game/player/attack';\nimport '@game/player/equipments';\nimport '@game/player/load';\nimport '@game/player/movement';\nimport '@game/player/notification';\nimport '@game/player/save';\nimport '@game/player/stream';\n\n// Othes\nimport '@game/player/initial';\n\n"]}