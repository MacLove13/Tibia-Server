{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/player/load/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uCAA4C;AAE5C,oEAAoE;AACpE,qCAAsC;AAEtC,yDAA2C;AAE3C,SAAgB,aAAa,CAAC,GAAW,EAAE,MAAuB,EAAE,QAAgB;IAElF,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;SAC5C,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;QAClB,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACvC,OAAO;SACR;QAED,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;QAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAC9B,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9B,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,GAAG,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACtC,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAE1C,GAAG,CAAC,IAAI,EAAE,CAAC;QACX,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,qBAAa,CAAC,cAAc,EAAE,CAAC,CAAC;QAC7D,GAAG,CAAC,WAAW,EAAE,CAAC;QAClB,qBAAa,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAChC,GAAG,CAAC,gBAAgB,EAAE,CAAC;QAEvB,GAAG,CAAC,gBAAgB,CAAC;YACnB,KAAK,EAAE,gBAAgB;YACvB,OAAO,EAAE,wBAAwB;SAClC,CAAC,CAAC;QAEH,GAAG,CAAC,gBAAgB,EAAE,CAAC;QACvB,GAAG,CAAC,aAAa,EAAE,CAAC;QAEpB,qBAAW,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACpE,CAAC,CAAC;SACD,KAAK,CAAC,GAAG,CAAC,EAAE;QACX,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC;AAxCD,sCAwCC","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { characterList } from \"@game/state\";\nimport { Player } from \"@game/player\";\n// import * as Backpack from '../../Features/Backpack/LoadBackpack';\nimport { serverEvent } from '@events';\n\nimport * as Model from \"@models/character\";\n\nexport function LoadCharacter(plr: Player, socket: SocketIO.Socket, authcode: string) {\n\n  Model.Character.findOne({ where: { id: 2 } })\n  .then((char: any) => {\n    if (!char) {\n      console.log('Usuário não encontrado!');\n      return;\n    }\n\n    plr.syncData.SqlID = char.id;\n    plr.syncData.Name = char.name;\n    plr.syncData.Level = char.level;\n    plr.syncData.CurrentExp = char.experience;\n    plr.syncData.UUID = char.uuid;\n    plr.syncData.HP = char.health;\n    plr.syncData.MaxHP = char.max_health;\n    plr.syncData.Speed = char.speed;\n    plr.syncData.Race = char.skin_name;\n    plr.syncData.Position = char.position;\n    plr.syncData.equipments = char.equipments;\n\n    plr.Sync();\n    socket.emit(\"NewCharacters\", characterList.GetAllSyncData());\n    plr.SelfAnnouce();\n    characterList.AddNewPlayer(plr);\n    plr.UpdateExperience();\n\n    plr.sendNotification({\n      Title: 'Tibia on Rails',\n      Content: 'Bem vindo a Alpha v0.1'\n    });\n\n    plr.UpdateEquipments();\n    plr.CheckSafeZone();\n\n    serverEvent.emit('user:connect', { player: plr, socket: socket });\n  })\n  .catch(err => {\n    console.error('Erro ao buscar usuário:', err);\n  });\n}\n"]}