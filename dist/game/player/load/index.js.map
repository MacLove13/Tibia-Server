{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/player/load/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uCAA4C;AAE5C,oEAAoE;AACpE,qCAAsC;AACtC,qEAA0E;AAG1E,yDAA2C;AAE3C,SAAsB,aAAa,CAAC,GAAW,EAAE,MAAuB,EAAE,QAAgB;;QAExF,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAA;QACpC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAA;QAC5C,MAAM,WAAW,GAAG,MAAM,IAAA,uCAAsB,EAAC,QAAQ,CAAC,CAAC;QAE3D,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,WAAW,CAAC,CAAC;QACpD,IAAI,WAAW,IAAI,IAAI,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;YAC7C,OAAO;SACR;QAGD,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,CAAC;aACtD,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;YAClB,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;gBACvC,OAAO;aACR;YAED,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;YAC7B,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9B,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1C,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9B,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;YACrC,GAAG,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YACnC,GAAG,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YACtC,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAE1C,GAAG,CAAC,IAAI,EAAE,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,qBAAa,CAAC,cAAc,EAAE,CAAC,CAAC;YAC7D,GAAG,CAAC,WAAW,EAAE,CAAC;YAClB,qBAAa,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YAChC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAEvB,GAAG,CAAC,gBAAgB,CAAC;gBACnB,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,wBAAwB;aAClC,CAAC,CAAC;YAEH,GAAG,CAAC,gBAAgB,EAAE,CAAC;YACvB,GAAG,CAAC,aAAa,EAAE,CAAC;YAEpB,GAAG,CAAC,aAAa,EAAE,CAAC;YAEpB,qBAAW,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;YAE9C,kCAAkC;QACpC,CAAC,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,GAAG,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;CAAA;AAvDD,sCAuDC","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { characterList } from \"@game/state\";\nimport { Player } from \"@game/player\";\n// import * as Backpack from '../../Features/Backpack/LoadBackpack';\nimport { serverEvent } from '@events';\nimport { GetCharacterByAuthCode } from '@game/player/load/authentication';\n\nimport * as Chat from '@game/chat';\nimport * as Model from \"@models/character\";\n\nexport async function LoadCharacter(plr: Player, socket: SocketIO.Socket, authcode: string) {\n\n  console.log(\"authcode: \" + authcode)\n  console.log(\"Loading Character By Authcode\")\n  const characterId = await GetCharacterByAuthCode(authcode);\n\n  console.log(\"Character loaded. Id: \" + characterId);\n  if (characterId == null) {\n    console.log(\"Character not founded by Code\");\n    return;\n  }\n\n\n  Model.Character.findOne({ where: { id: characterId } })\n  .then((char: any) => {\n    if (!char) {\n      console.log('Usuário não encontrado!');\n      return;\n    }\n\n    plr.syncData.SqlID = char.id;\n    plr.syncData.Name = char.name;\n    plr.syncData.Level = char.level;\n    plr.syncData.CurrentExp = char.experience;\n    plr.syncData.UUID = char.uuid;\n    plr.syncData.HP = char.health;\n    plr.syncData.MaxHP = char.max_health;\n    plr.syncData.Speed = char.speed;\n    plr.syncData.Race = char.skin_name;\n    plr.syncData.Position = char.position;\n    plr.syncData.equipments = char.equipments;\n\n    plr.Sync();\n    socket.emit(\"NewCharacters\", characterList.GetAllSyncData());\n    plr.SelfAnnouce();\n    characterList.AddNewPlayer(plr);\n    plr.UpdateExperience();\n\n    plr.sendNotification({\n      Title: 'Tibia on Rails',\n      Content: 'Bem vindo a Alpha v0.1'\n    });\n\n    plr.UpdateEquipments();\n    plr.CheckSafeZone();\n\n    plr.AddPlayerList();\n\n    serverEvent.emit('user:connect', plr, socket);\n\n    // Chat.OnConnection(plr, socket);\n  })\n  .catch(err => {\n    console.error('Erro ao buscar usuário:', err);\n  });\n}\n"]}