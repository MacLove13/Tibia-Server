{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/player/events/index.ts"],"names":[],"mappings":";;;AAGA,uCAA4C;AAC5C,2CAA8C;AAG9C,4EAA4E;AAE5E,SAAgB,YAAY,CAAC,GAAW,EAAE,MAAuB;IAC/D,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,IAAc;QAC9C,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,IAAwB;QACxD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,IAAkD;QAC/E,qBAAqB;IACvB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,WAAW,EAAE,UAAU,IAA2B;QAE1D,yBAAyB;QACzB,aAAa;QACb,2BAA2B;QAC3B,MAAM;QACN,oBAAoB;QACpB,gBAAgB;QAEhB,wEAAwE;QAExE,kCAAkC;QAClC,yCAAyC;QAEzC,aAAa;QACb,0CAA0C;QAC1C,MAAM;QACN,sBAAsB;QACtB,oDAAoD;QACpD,MAAM;IACR,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,eAAe,EAAE,UAAU,IAAqB;QACxD,qBAAY,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,UAAU,IAA0C;QAC5E,IAAI,GAAG,GAAG,qBAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAE3C,IAAI,GAAG,EAAE;YACP,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,UAAU,GAAG,qBAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAChD,IAAI,CAAC,UAAU;oBAAE,OAAO;gBACxB,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACxB;iBAAM;gBACL,GAAG,CAAC,QAAQ,EAAE,CAAC;aAChB;SACF;IACH,CAAC,CAAC,CAAC;AAEL,CAAC;AArDD,oCAqDC","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { serverEvent } from '@events';\nimport { Player } from \"@game/player\";\nimport { characterList } from \"@game/state\";\nimport { serverSocket } from '@socket/socket';\nimport { MoveData } from \"@utils/interface\";\n\n// import * as ItemTemplate from '../../Features/ItemTemplate/ItemTemplate';\n\nexport function OnConnection(plr: Player, socket: SocketIO.Socket) {\n  socket.on(\"PlayerMove\", function (data: MoveData) {\n    plr.Move(data);\n  });\n\n  socket.on(\"PlayerHeal\", function (data: { Points: number }) {\n    plr.Heal(data.Points);\n  });\n\n  socket.on(\"UseItem\", function (data: { item_uuid: number, backpack_uuid: string }) {\n    // plr.UseItem(data);\n  });\n\n  socket.on(\"EquipItem\", function (data: { item_uuid: string }) {\n\n    // BackpackItem.findOne({\n    //   where: {\n    //     uuid: data.item_uuid\n    //   }\n    // }).then(item => {\n    //   if (item) {\n        \n    //     const itemTemplate = ItemTemplate.GetByID(item.item_template_id);\n\n    //     if (itemTemplate.Type == 4)\n    //         plr.Equip(item, itemTemplate);\n\n    //   } else {\n    //     console.log('Item nÃ£o encontrado');\n    //   }\n    // }).catch(error => {\n    //   console.error('Erro ao buscar o item:', error);\n    // });\n  });\n\n  socket.on(\"PlayerMessage\", function (data: { Msg: string }) {\n    serverSocket.sockets.emit(\"CharacterMessage\", { Msg: data.Msg, ID: socket.id });\n  });\n\n  socket.on(\"PlayerTarget\", function (data: { ID: string; IsTargeting: boolean }) {\n    var plr = characterList.GetByID(socket.id);\n  \n    if (plr) {\n      if (data.IsTargeting) {\n        var targetChar = characterList.GetByID(data.ID);\n        if (!targetChar) return;\n        plr.Target(targetChar);\n      } else {\n        plr.Untarget();\n      }\n    }\n  });\n\n}\n\n\n"]}