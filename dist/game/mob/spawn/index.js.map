{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/mob/spawn/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Mob } from \"@game/mob\";\nimport { characterList, config, ground } from \"@game/state\";\nimport { Player } from \"@game/player\";\nimport { Vector2D } from \"@utils/interface\";\nimport * as Geometry from \"@utils/geometry\";\n\nexport class Spawn {\n  private mobList = new Array<Mob>();\n  private pos: Vector2D;\n  private desiredMobCount = 0;\n  private newList = new Array<number>();\n  private spawnableMobs = new Array<string>();\n\n  constructor(posX: number, posY: number) {\n    this.pos = { x: posX, y: posY };\n  }\n\n  MaintainMobCount(count: number) {\n    this.desiredMobCount = count;\n  }\n\n  DefineMobsInSpawn(mobs: Array<string>) {\n    this.spawnableMobs = mobs;\n  }\n\n  Process() {\n    if (this.mobList.length + this.newList.length < this.desiredMobCount) {\n      this.newList.push(Date.now());\n    }\n\n    if (this.newList.length > 0) {\n      if ((this.newList[0] + config.MobSpawnDelay) < Date.now()) {\n        this.addNew();\n        this.newList.splice(0, 1);\n      }\n    }\n\n    for (var i = 0; i < this.mobList.length; i++) {\n      if (this.mobList[i].IsDead()) {\n        characterList.RemoveByID(this.mobList[i].GetID());\n        this.mobList.splice(i, 1);\n        i--;\n        continue;\n      }\n\n      if (this.mobList[i].targetChar) {\n        const targetChar = this.mobList[i].targetChar;\n\n        if (targetChar?.InSafeZone()) {\n          targetChar.Untarget();\n        }\n      }\n\n      if (this.mobList[i].syncData.Hostile && !this.mobList[i].syncData.Freezed) {\n        var nearestPlr = this.getNearestPlayer(this.mobList[i]);\n        if (!nearestPlr) return;\n\n        var plrPos = nearestPlr.GetJSON().Position;\n        var mobPos = this.mobList[i].GetJSON().Position;\n        var dist = Geometry.GetDistance(mobPos, plrPos);\n\n        if (!nearestPlr.inSafeZone) {\n          this.mobList[i].Target(nearestPlr);\n          this.mobList[i].AttackTarget();\n        }\n\n        if (dist < 7 && dist > 1.5 && !nearestPlr.inSafeZone) {\n          this.mobList[i].MoveByVector({x: mobPos.x - plrPos.x, y: mobPos.y - plrPos.y});\n        }\n     \n        if (dist >= 7 || nearestPlr.inSafeZone) {\n          this.mobList[i].IdleMoving();\n        }\n      }\n      else {\n        if (!this.mobList[i].syncData.Freezed) {\n          this.mobList[i].IdleMoving();\n        }\n      }\n    }\n  }\n\n  private addNew() {\n      var char = new Mob(\n        this.spawnableMobs[(Math.random() * this.spawnableMobs.length) | 0],\n        {\n          x: ((Math.random() - 0.5) * 4 + this.pos.x) | 0,\n          y: ((Math.random() - 0.5) * 4 + this.pos.y) | 0\n        }\n      );\n\n      if (ground.GetCollision(char.syncData.InLayer, char.syncData.Position.x, char.syncData.Position.y))\n        return;\n      \n      char.SelfAnnouce();\n      characterList.AddNewMob(char);\n      this.mobList.push(char);\n  }\n\n  private getNearestPlayer(mob: Mob): Player | undefined {\n    var lastDist = 1000000;\n    var selectedPlayer: Player | undefined;\n\n    characterList.ForEachPlayer((plr) => {\n      var tmpDist = Geometry.GetDistance(plr.GetJSON().Position, mob.GetJSON().Position)\n      if (tmpDist < lastDist) {\n        lastDist = tmpDist;\n        selectedPlayer = plr;\n      }\n    });\n\n    return selectedPlayer;\n  }\n}\n"]}