{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/mob/index.ts"],"names":[],"mappings":";;;AACA,+CAAsD;AAGtD,mCAAiC;AACjC,4BAA0B;AAE1B,MAAa,GAAG;IAQd,YAAY,OAAe,EAAE,GAAa;QAN1C,iBAAY,GAAG,CAAC,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAClB,mBAAc,GAAG,CAAC,CAAC;QACnB,gBAAW,GAAG,GAAG,CAAC;QAIhB,IAAI,CAAC,QAAQ,GAAG,IAAI,+BAAmB,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAC/C,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,UAAU;QACR,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAChC,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC1B,CAAC;CA2CF;AA3ED,kBA2EC","sourcesContent":["import { Character } from '@game/character/interface';\nimport { CharacterDataToSync } from '@game/character';\nimport { Vector2D, MoveData } from '@utils/interface';\n\nimport '@game/mob/movimentation';\nimport '@game/mob/attack';\n\nexport class Mob implements Character {\n  syncData: CharacterDataToSync;\n  lastMoveTime = 0;\n  moveDelay = 35000;\n  LastAttackTime = 0;\n  AttackDelay = 850;\n  targetChar: Character | null;\n\n  constructor(mobType: string, pos: Vector2D) {\n    this.syncData = new CharacterDataToSync(mobType);\n    this.syncData.Position = pos;\n    this.moveDelay = 35000 / this.syncData.Speed;\n  }\n\n  GetID(): string {\n    return this.syncData.ID;\n  }\n\n  IsDead(): boolean {\n    return this.syncData.HP <= 0;\n  }\n\n  InSafeZone(): boolean {\n    return false;\n  }\n\n  GetJSON(): any {\n    return this.syncData.toJSON();\n  }\n\n  GetHP(): number {\n    return this.syncData.HP;\n  }\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Move(data: MoveData): void;\n\n  // @ts-ignore\n  MoveDir(rot: Rotation): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  CanMove(): boolean;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Target(char: Character): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Untarget(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  AttackTarget(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Hit(dmg: number): { Exp: number } | undefined;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Kill(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  CanAttack(): boolean;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  Dispose(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  SelfAnnouce(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  IdleMoving(): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  MoveByVector(desiredMoveV: Vector2D): void;\n\n  // @ts-ignore - Ignore the following TypeScript error\n  TileCanMove(layer: number, x: number, y: number): boolean;\n}\n\n"]}