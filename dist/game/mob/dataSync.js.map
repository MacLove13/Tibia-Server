{"version":3,"file":"dataSync.js","sourceRoot":"/","sources":["game/mob/dataSync.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAyC;AAGzC,MAAa,WAAW;IAkBpB,MAAM;QACF,OAAO;YACH,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;SACxB,CAAC;IACN,CAAC;IAED,YAAY,IAAa;QACrB,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAA0C,CAAC,CAAC;QACzF,IAAI,SAAS,EAAE;YACX,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC;YACtC,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE,CAAC;YAC1B,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;SAC1B;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAEjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,WAAW,CAAC,MAAM,EAAE,CAAC;IACzB,CAAC;;AAtDL,kCAyDC;AADkB,kBAAM,GAAG,CAAC,CAAC","sourcesContent":["import * as GameState from '@game/state';\nimport { Vector2D } from '@utils/interface';\n\nexport class mobDataSync {\n    Position: Vector2D;\n    Name: string;\n    Race: string;\n    ID: string;\n    UUID: string;\n    HP: number;\n    MaxHP: number;\n    Speed: number;\n    Level: number;\n    CurrentExp: number;\n    ExpAtDead: number;\n    Attack: number;\n    InLayer: number;\n    Freezed: boolean;\n    Rotation: number;\n    Hostile: boolean;\n\n    toJSON() {\n        return {\n            Position: this.Position,\n            Speed: this.Speed,\n            HP: this.HP,\n            MaxHP: this.MaxHP,\n            Race: this.Race,\n            ID: this.ID,\n            Level: this.Level,\n            Attack: this.Attack,\n            InLayer: this.InLayer,\n            Freezed: this.Freezed,\n            Rotation: this.Rotation,\n            Hostile: this.Hostile,\n        };\n    }\n\n    constructor(race : string) {\n        this.ID = mobDataSync.lastID.toString();\n        this.Race = race;\n\n        const mobConfig = GameState.config.Mobs[this.Race as keyof typeof GameState.config.Mobs];\n        if (mobConfig) {\n            this.Speed = mobConfig.Speed;\n            this.ExpAtDead = mobConfig.Experience;\n            this.MaxHP = mobConfig.HP;\n            this.HP = mobConfig.HP;\n        }\n        this.Attack = 0;\n        this.InLayer = 0;\n\n        this.Freezed = false;\n        this.Hostile = false;\n        this.Rotation = 0;\n\n        mobDataSync.lastID++;\n    }\n\n    private static lastID = 0;\n}\n"]}