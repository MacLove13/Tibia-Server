{"version":3,"file":"index.js","sourceRoot":"/","sources":["game/chat/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,yCAAkD;AAClD,kDAAoC;AACpC,qCAAsC;AACtC,sEAAmE;AACnE,0DAA4C;AAE5C,qBAAW,CAAC,EAAE,CAAC,cAAc,EAAE,YAAY,CAAC,CAAC;AAE7C,SAAgB,YAAY,CAAC,GAAW,EAAE,MAAuB;IAC/D,MAAM,WAAW,GAAG,GAAG,CAAC,aAAa,CAAC;IAEtC,MAAM,CAAC,EAAE,CAAC,sBAAsB,EAAE,UAAU,IAAiC;QAC3E,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;QAChD,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAA;QAEjC,MAAM,OAAO,GAAG,iCAAe,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;SACnC;IACF,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAU,IAAyC;QAEhF,mBAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YAClB,IAAI,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE;gBAAE,OAAO;YAEjF,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE;oBACtD;wBACC,EAAE,EAAE,IAAI,CAAC,MAAM;wBACf,MAAM,EAAE;4BACP,EAAE,EAAE,GAAG,CAAC,QAAQ,CAAC,KAAK;4BACtB,IAAI,EAAE,GAAG,CAAC,QAAQ,CAAC,IAAI;yBACvB;wBACD,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE;wBAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;qBACrB;iBACD,EAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACF,CAAC,CAAC,CAAC;IAEH,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE;YACxE;gBACC,EAAE,EAAE,CAAC;gBACL,MAAM,EAAE;oBACP,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,QAAQ;iBACd;gBACD,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE;gBAC7B,OAAO,EAAE,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,cAAc;aAC/C;SACD,EAAC,CAAC,CAAC;IAEJ,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;YACvE;gBACC,EAAE,EAAE,CAAC,CAAC;gBACN,MAAM,EAAE;oBACP,EAAE,EAAE,CAAC;oBACL,IAAI,EAAE,QAAQ;iBACd;gBACD,IAAI,EAAE,IAAI,CAAC,gBAAgB,EAAE;gBAC7B,OAAO,EAAE,qBAAqB;aAC9B;SACD,EAAC,CAAC,CAAC;AACL,CAAC;AAzDD,oCAyDC","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { serverSocket } from '@socket/socket';\nimport { Player, allPlayers } from \"@game/player\";\nimport * as Time from '@utils/time';\nimport { serverEvent } from '@events';\nimport { CommandRegistry } from './commandsSystem/CommandRegistry';\nimport * as Geometry from '@utils/geometry';\n\nserverEvent.on('user:connect', OnConnection);\n\nexport function OnConnection(plr: Player, socket: SocketIO.Socket) {\n  const playerLayer = plr.conversations;\n\n  socket.on(\"chat:command:execute\", function (data: { cmd: string; args: any; }) {\n    console.log(\"User as used command: \" + data.cmd)\n    console.log(\"Args: \" + data.args)\n\n    const command = CommandRegistry.getCommand(data.cmd);\n\t  if (command) {\n\t    command.execute(plr, data.args);\n\t  } else {\n\t    console.log(\"Command not found.\");\n\t  }\n  });\n\n  socket.on(\"chat:sendMessage\", function (data: { chatId: number; message: string }) {\n\n  \tallPlayers.map(x => {\n  \t\tif (Geometry.GetDistance(plr.syncData.Position, x.syncData.Position) > 10) return;\n\n\t    x.socket.emit(\"chat:sendMessage\", { id: 0, messages: [\n\t\t\t\t{\n\t\t\t\t\tid: data.chatId,\n\t\t\t\t\tsender: {\n\t\t\t\t\t\tid: plr.syncData.SqlID,\n\t\t\t\t\t\tname: plr.syncData.Name,\n\t\t\t\t\t},\n\t\t\t\t\thour: Time.getHourAndMinute(),\n\t\t\t\t\tmessage: data.message\n\t\t\t\t}\n\t\t\t]})\n\t\t})\n  });\n\n  plr.socket.emit(\"chat:sendMessage\", { id: 0, name: 'General', messages: [\n\t\t{\n\t\t\tid: 0,\n\t\t\tsender: {\n\t\t\t\tid: 0,\n\t\t\t\tname: 'System'\n\t\t\t},\n\t\t\thour: Time.getHourAndMinute(),\n\t\t\tmessage: `Olá ${plr.syncData.Name}, bem vindo!`\n\t\t}\n\t]});\n\n\tplr.socket.emit(\"chat:sendMessage\", { id: -1, name: 'System', messages: [\n\t\t{\n\t\t\tid: -1,\n\t\t\tsender: {\n\t\t\t\tid: 0,\n\t\t\t\tname: 'System'\n\t\t\t},\n\t\t\thour: Time.getHourAndMinute(),\n\t\t\tmessage: 'Você entrou no jogo'\n\t\t}\n\t]});\n}\n"]}