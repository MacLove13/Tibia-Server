{"version":3,"file":"connection.js","sourceRoot":"/","sources":["database/connection.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yCAA+C;AAE/C,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;AACnD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,UAAU,CAAC;AACjD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,UAAU,CAAC;AACjD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,WAAW,CAAC;AAClD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,QAAQ,CAAC;AACnD,MAAM,MAAM,GAAa,OAAO,CAAC,GAAG,CAAC,OAAmB,IAAI,UAAU,CAAC;AACvE,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,KAAK,MAAM,CAAC;AAE7C,QAAA,EAAE,GAAG,IAAI,qBAAS,CAC7B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IACtB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,MAAM;IACf,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,WAAW;CACrB,CACF,CAAC;AAEF,SAAsB,IAAI;;QACxB,IAAI;YACF,MAAM,UAAE,CAAC,YAAY,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,4DAA4D,CAAC,CAAC;SAC3E;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YAC9D,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;SACrB;IACH,CAAC;CAAA;AARD,oBAQC;AAED,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,GAAG,EAAE;IACzB,UAAE,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;QACnB,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;QACrD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { Sequelize, Dialect } from 'sequelize';\n\nconst dbPort = Number(process.env.DB_PORT) || 5432;\nconst dbUser = process.env.DB_USER || 'postgres';\nconst dbPass = process.env.DB_PASS || 'postgres';\nconst dbHost = process.env.DB_HOST || 'localhost';\nconst dbName = process.env.DB_DATABASE || 'server';\nconst dbType: Dialect = (process.env.DB_TYPE as Dialect) || 'postgres';\nconst consoleLogs = process.env.DB_CONSOLE_LOG === 'true';\n\nexport const db = new Sequelize(\n  dbName, dbUser, dbPass, {\n    host: dbHost,\n    dialect: dbType,\n    port: dbPort,\n    logging: consoleLogs,\n  },\n);\n\nexport async function init() {\n  try {\n    await db.authenticate();\n    console.log('Conexão com o banco de dados foi estabelecida com sucesso.');\n  } catch (error) {\n    console.error('Não foi possível conectar ao banco de dados:');\n    console.error(error)\n  }\n}\n\nprocess.on('SIGTERM', () => {\n  db.close().then(() => {\n    console.log('Conexão com o banco de dados fechada.');\n    process.exit(0);\n  });\n});\n"]}