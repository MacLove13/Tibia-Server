{"version":3,"file":"socket.js","sourceRoot":"/","sources":["internal/socket.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,oDAAsC;AACtC,sCAAmC;AAKtB,QAAA,YAAY,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,eAAM,EAAE;IACtD,IAAI,EAAE;QACJ,MAAM,EAAE,CAAC,uBAAuB,EAAE,uBAAuB,EAAE,uBAAuB,CAAC;QACnF,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC;QACxB,WAAW,EAAE,IAAI;KAClB;CACF,CAAC,CAAC;AAEH,oBAAY,CAAC,EAAE,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,EAAE;IACzC,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AAEH,uCAAuC;AACvC,6CAA6C;AAC7C,MAAM;AAEN,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["import * as SocketIO from 'socket.io';\nimport { server } from '../server';\nimport { Player } from '@game/player';\n\nimport { serverEvent } from '@events';\n\nexport const serverSocket = new SocketIO.Server(server, {\n  cors: {\n    origin: [\"http://127.0.0.1:3000\", \"http://localhost:3000\", \"http://127.0.0.1:2137\"], // Allowing both local addresses\n    methods: [\"GET\", \"POST\"],\n    credentials: true,\n  }\n});\n\nserverSocket.on('connect_error', (error) => {\n  console.error('Connection Error:', error);\n});\n\n// serverSocket.use((socket, next) => {\n//   next(new Error('Authentication error'));\n// });\n\nconsole.log('Socket Initialized');\n"]}