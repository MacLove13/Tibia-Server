{"version":3,"file":"geometry.js","sourceRoot":"/","sources":["utils/geometry.ts"],"names":[],"mappings":";;;AAEA,SAAgB,WAAW,CAAC,EAAY,EAAE,EAAY;IAClD,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACrB,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAErB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC5C,CAAC;AALD,kCAKC;AAED,SAAgB,gBAAgB,CAAC,CAAW;IACxC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,KAAK,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IACpF,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,EAAE,EAAE;QAAE,6BAAoB;KAAE;IAAA,CAAC;IAC1D,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,GAAG,EAAE;QAAE,4BAAmB;KAAE;IAAA,CAAC;IACvD,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;QAAE,8BAAqB;KAAE;IAAA,CAAC;IAC5D,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,EAAE;QAAE,6BAAqB;KAAE;AAE7D,CAAC;AARD,4CAQC","sourcesContent":["import {Vector2D, Rotation} from \"@utils/interface\";\n\nexport function GetDistance(p1: Vector2D, p2: Vector2D): number {\n    var vx = p1.x - p2.x;\n    var vy = p1.y - p2.y;\n\n    return Math.sqrt((vx * vx) + (vy * vy));\n}\n\nexport function GetRotationFromV(v: Vector2D) {\n    var radians = Math.atan2(v.y, v.x);\n    var angle = (radians > 0 ? radians : (2 * Math.PI + radians)) * 360 / (2 * Math.PI);\n    if (angle >= 315 || angle <= 45) { return Rotation.Left };\n    if (angle > 45 && angle < 135) { return Rotation.Top };\n    if (angle >= 135 && angle <= 225) { return Rotation.Right };\n    if (angle > 225 && angle < 315) { return Rotation.Down; }\n\n}\n"]}